version: '3.8'

services:
  # Frontend - Next.js Application
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: flowshapr-frontend
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_APP_URL=${FRONTEND_URL:-https://app.flowshapr.ai}
      - BACKEND_URL=${API_URL:-https://api.flowshapr.ai}
      - NEXT_PUBLIC_BETTER_AUTH_URL=${API_URL:-https://api.flowshapr.ai}
      # Social Auth Provider Keys (public - for display purposes)
      - NEXT_PUBLIC_GOOGLE_CLIENT_ID=${NEXT_PUBLIC_GOOGLE_CLIENT_ID}
      - NEXT_PUBLIC_GITHUB_CLIENT_ID=${NEXT_PUBLIC_GITHUB_CLIENT_ID}
      - NEXT_PUBLIC_MICROSOFT_CLIENT_ID=${NEXT_PUBLIC_MICROSOFT_CLIENT_ID}
      - NEXT_PUBLIC_APPLE_CLIENT_ID=${NEXT_PUBLIC_APPLE_CLIENT_ID}
    ports:
      - "3000:3000"
    depends_on:
      - api
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - flowshapr-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`app.flowshapr.ai`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=letsencrypt"

  # Backend API - Express.js Server
  api:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: flowshapr-api
    environment:
      - NODE_ENV=production
      - PORT=3001
      
      # Database Configuration (Coolify magic variable)
      - DATABASE_URL=${COOLIFY_DATABASE_URL}
      - DB_HOST=${DB_HOST:-postgres}
      - DB_PORT=${DB_PORT:-5432}
      - DB_NAME=${DB_NAME:-flowshapr}
      - DB_USER=${DB_USER:-flowshapr}
      - DB_PASSWORD=${DB_PASSWORD}
      
      # Better Auth Configuration
      - BETTER_AUTH_SECRET=${BETTER_AUTH_SECRET}
      - BETTER_AUTH_URL=${API_URL:-https://api.flowshapr.ai}
      
      # Social Auth Provider Configuration
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
      - MICROSOFT_CLIENT_ID=${MICROSOFT_CLIENT_ID}
      - MICROSOFT_CLIENT_SECRET=${MICROSOFT_CLIENT_SECRET}
      - APPLE_CLIENT_ID=${APPLE_CLIENT_ID}
      - APPLE_CLIENT_SECRET=${APPLE_CLIENT_SECRET}
      
      # AI Provider API Keys
      - GOOGLE_AI_API_KEY=${GOOGLE_AI_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      
      # CORS Configuration
      - CORS_ORIGIN=${FRONTEND_URL:-https://app.flowshapr.ai}
      
      # Container Executor Configuration
      - CONTAINER_EXECUTOR_TIMEOUT=${CONTAINER_EXECUTOR_TIMEOUT:-60000}
      - MAX_CONCURRENT_CONTAINERS=${MAX_CONCURRENT_CONTAINERS:-10}
      
      # Rate Limiting
      - RATE_LIMIT_WINDOW_MS=${RATE_LIMIT_WINDOW_MS:-900000}
      - RATE_LIMIT_MAX_REQUESTS=${RATE_LIMIT_MAX_REQUESTS:-100}
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '2.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - flowshapr-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.flowshapr.ai`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=letsencrypt"
    volumes:
      # Bind mount for container management (Docker socket access)
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # Persistent storage for logs and temporary files
      - type: bind
        source: ./data/api/logs
        target: /app/logs
        is_directory: true
      - type: bind
        source: ./data/api/temp
        target: /app/temp
        is_directory: true

  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: flowshapr-postgres
    environment:
      - POSTGRES_DB=${DB_NAME:-flowshapr}
      - POSTGRES_USER=${DB_USER:-flowshapr}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
      - PGDATA=/var/lib/postgresql/data/pgdata
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.25'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-flowshapr} -d ${DB_NAME:-flowshapr}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - flowshapr-network
    volumes:
      - type: bind
        source: ./data/postgres
        target: /var/lib/postgresql/data
        is_directory: true
    # Security: No external ports - database only accessible within network

  # Genkit Execution Workers (Scaled for Production)
  genkit-executor-1:
    build:
      context: ./server/docker/execution
      dockerfile: Dockerfile
    container_name: flowshapr-genkit-executor-1
    environment:
      - NODE_ENV=production
      - EXECUTOR_ID=executor-1
      - PORT=3000
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - flowshapr-network
    # Security: No external ports - only accessible within network

  genkit-executor-2:
    build:
      context: ./server/docker/execution
      dockerfile: Dockerfile
    container_name: flowshapr-genkit-executor-2
    environment:
      - NODE_ENV=production
      - EXECUTOR_ID=executor-2
      - PORT=3000
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - flowshapr-network

  genkit-executor-3:
    build:
      context: ./server/docker/execution
      dockerfile: Dockerfile
    container_name: flowshapr-genkit-executor-3
    environment:
      - NODE_ENV=production
      - EXECUTOR_ID=executor-3
      - PORT=3000
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - flowshapr-network

  # Additional Executor Pools (Scalable)
  genkit-executor-4:
    build:
      context: ./server/docker/execution
      dockerfile: Dockerfile
    container_name: flowshapr-genkit-executor-4
    environment:
      - NODE_ENV=production
      - EXECUTOR_ID=executor-4
      - PORT=3000
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - flowshapr-network

networks:
  flowshapr-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Volumes for data persistence (Coolify will manage these)
volumes:
  postgres-data:
    driver: local
  api-logs:
    driver: local
  api-temp:
    driver: local