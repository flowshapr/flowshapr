version: '3.8'

services:
  # PostgreSQL Database (same as production)
  postgres:
    image: postgres:16-alpine
    container_name: flowshapr-postgres-dev
    environment:
      - POSTGRES_DB=flowshapr
      - POSTGRES_USER=flowshapr
      - POSTGRES_PASSWORD=flowshapr_dev_password
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    networks:
      - app-network
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U flowshapr -d flowshapr"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API Server (Development Mode)
  api:
    image: node:20-alpine
    container_name: flowshapr-api-dev
    working_dir: /app
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DATABASE_URL=postgresql://flowshapr:flowshapr_dev_password@postgres:5432/flowshapr
      - BETTER_AUTH_SECRET=dev_auth_secret_for_development
      - BETTER_AUTH_URL=http://localhost:3001
      - EXECUTOR_URLS=http://genkit-executor:3000
    volumes:
      - ../server:/app:cached
      - api_node_modules:/app/node_modules
    networks:
      - app-network
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      genkit-executor:
        condition: service_started
    command: sh -c "npm install && npm run db:migrate && npm run dev"
    restart: unless-stopped

  # Frontend Next.js App (Development Mode)
  frontend:
    image: node:20-alpine
    container_name: flowshapr-frontend-dev
    working_dir: /app
    environment:
      - NODE_ENV=development
      - PORT=3000
      - NEXT_PUBLIC_API_URL=http://localhost:3001
      - BACKEND_URL=http://api:3001
      - HOSTNAME=0.0.0.0
      - WATCHPACK_POLLING=true
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ..:/app:cached
      - frontend_node_modules:/app/node_modules
      - /app/.next
    networks:
      - app-network
    ports:
      - "3000:3000"
    depends_on:
      - api
    command: sh -c "npm install && npm run dev"
    restart: unless-stopped

  # Genkit Execution Worker (Development Mode)
  genkit-executor:
    image: node:20-alpine
    container_name: flowshapr-executor-dev
    working_dir: /app
    environment:
      - NODE_ENV=development
      - EXECUTOR_ID=executor-dev
      - PORT=3000
    volumes:
      - ./execution:/app:cached
      - executor_node_modules:/app/node_modules
    networks:
      - app-network
    ports:
      - "3002:3000"
    command: sh -c "npm install && node execution-daemon.js"
    restart: unless-stopped

volumes:
  postgres_dev_data:
    driver: local
  api_node_modules:
    driver: local
  frontend_node_modules:
    driver: local
  executor_node_modules:
    driver: local

networks:
  app-network:
    driver: bridge